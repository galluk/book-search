// * `/api/books` (get) - Should return all saved books as JSON.

// * `/api/books` (post) - Will be used to save a new book to the database.

// * `/api/books/:id` (delete) - Will be used to delete a book from the database by Mongo `_id`.

// * `*` (get) - Will load your single HTML page in `client/build/index.html`. Make sure you have this _after_ all other routes are defined.
const router = require('express').Router();
const db = require('../models');

router.get('/api/books', (req, res) => {
  console.log('getting books');
  
  // get all the books currently in the DB
  db.Book.findAll({})
    .then(books => res.json(books))
    // .then({msg: 'hello'})
    .catch(err => res.status(422).end());
});

router.post('/api/books', (req, res) => {
  console.log('doing post for /api/books');
  
  db.Book.add({
      title: req.volumeInfo.title,
      authors: req.book.volumeInfo.authors,
      description: req.volumeInfo.description,
      image: req.volumeInfo.imageLinks.thumbnail,
      link: req.selfLink
    })
    // .then(recipes => res.json(recipes))
    .catch(err => res.status(422).end());
});

router.delete(`/api/books/:id`, (req, res) => {
  // Use a regular expression to search titles for req.query.q
  // using case insensitive match. https://docs.mongodb.com/manual/reference/operator/query/regex/index.html
  db.Book.delete({
    id: req.params.id
  })
    // .then(recipes => res.json(recipes))
    // .catch(err => res.status(422).end());
});

module.exports = router;
