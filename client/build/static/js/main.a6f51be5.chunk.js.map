{"version":3,"sources":["utils/API.js","components/SavedBookCard/index.js","components/Jumbotron/index.js","components/Grid/index.js","components/List/index.js","pages/Saved.js","components/SearchedBookCard/index.js","components/Form/index.js","pages/Search.js","components/Nav/index.js","App.js","registerServiceWorker.js","index.js"],"names":["searchTitle","replacedTitle","replace","axios","get","id","console","log","delete","bookData","post","SavedBookCard","props","className","title","Button","variant","onClick","API","then","res","afterDelete","catch","err","window","open","link","authors","alt","src","thumbnail","description","Jumbotron","children","style","height","clear","paddingTop","textAlign","Container","fluid","Row","Col","size","split","map","join","List","ListItem","Saved","useState","books","setBooks","loadBooks","data","useEffect","length","book","_id","key","image","SearchedBookCard","bookURL","bookDetails","alert","saveBook","Input","FormBtn","float","marginBottom","Search","formObject","setFormObject","onChange","event","target","name","value","placeholder","disabled","preventDefault","returnedBooks","items","volumeInfo","imageLinks","smallThumbnail","previewLink","Nav","href","to","location","pathname","App","exact","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a6f51be5.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst BOOKS_API_BASE = 'https://www.googleapis.com/books/v1/volumes?q=';\n\nexport default {\n  // search for book\n  searchBooks: function(searchTitle) {\n    let replacedTitle = searchTitle.replace(/\\s/g, '+');\n    return axios.get(BOOKS_API_BASE + replacedTitle);\n  },\n  // Gets all books\n  getBooks: function() {\n    return axios.get(\"/api/books\");\n  },\n  // Gets the book with the given id\n  getBook: function(id) {\n    return axios.get(\"/api/books/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function(id) {\n    console.log('deleting ' + id);\n    \n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function(bookData) {\n    console.log('saving book2 with:');\n    console.log(bookData);\n    return axios.post(\"/api/books\", bookData);\n  }\n};\n","import React from \"react\";\nimport API from \"../../utils/API\";\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import SaveBtn from \"../SaveBtn\";\n// import ViewBtn from \"../ViewBtn\";\nimport \"./style.css\";\n\nfunction SavedBookCard(props) {\n  \n  // view thew preview page of the book\n  function viewBook() {\n    window.open(props.link, '_blank');\n  }\n\n  // Deletes a book from the database with a given id, then reloads books from the db\n  function deleteBook() {\n    API.deleteBook(props.id)\n      .then(res => props.afterDelete())\n      .catch(err => console.log(err));\n  }\n\n  return (\n    <div className=\"card\">\n      <div>\n        <h4>{props.title}</h4> \n        <Button variant=\"danger\" className=\"float-right\" onClick={() => deleteBook()}>Delete</Button>\n        <Button variant=\"outline-primary\" className=\"float-right\" onClick={() => viewBook()}>View</Button>\n      </div>\n      <p>Written by: {props.authors}</p>\n      <div className=\"img-container\">\n        <img alt={props.title} src={props.thumbnail}></img>\n        <p>{props.description}</p>\n      </div>\n      <div className=\"content\">\n      </div>\n    </div>\n  );\n}\n\nexport default SavedBookCard;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\n\n// This file exports both the List and ListItem components\n\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">{children}</ul>\n    </div>\n  );\n}\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n","import React, { useState, useEffect } from \"react\";\r\nimport SavedBookCard from \"../components/SavedBookCard\"\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport API from \"../utils/API\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List, ListItem } from \"../components/List\";\r\n\r\nfunction Saved() {\r\n  // Set component's initial state\r\n  const [books, setBooks] = useState([])\r\n\r\n  // Load all books and store them with setBooks\r\n  useEffect(() => {\r\n    loadBooks()\r\n  }, [])\r\n\r\n  // Loads all books and sets them to books\r\n  function loadBooks() {\r\n    API.getBooks()\r\n      .then(res => setBooks(res.data)\r\n      )\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col size=\"md-10 sm-12\">\r\n          <Jumbotron>\r\n            <h1>(React) Google Book Search</h1>\r\n            <h3>Search for and save books of Interest</h3>\r\n          </Jumbotron>\r\n          <h3>Saved Books</h3>\r\n          {books.length ? (\r\n            <List>\r\n              {books.map(book => (\r\n                console.log(book._id),\r\n                <ListItem key={book._id}>\r\n                    <SavedBookCard\r\n                      id={book._id}\r\n                      title={book.title}\r\n                      authors={book.authors.join(', ')}\r\n                      thumbnail={book.image}\r\n                      description={book.description}\r\n                      link={book.link}\r\n                      afterDelete={loadBooks}\r\n                      />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          ) : (\r\n              <h3>No Results to Display</h3>\r\n            )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\n\r\nexport default Saved;\r\n","import React from \"react\";\nimport API from \"../../utils/API\";\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import SaveBtn from \"../SaveBtn\";\n// import ViewBtn from \"../ViewBtn\";\nimport \"./style.css\";\n\nfunction SearchedBookCard(props) {\n  \n  // view the preview page of the book\n  function viewBook(bookURL) {\n    window.open(bookURL, '_blank');\n  }\n\n  // Saves a book to the database with a given id\n  function saveBook(book) {\n    console.log('saving book');\n    const bookDetails = {\n        title: book.title, \n        authors: book.authors.split(', '),\n        description: book.description,\n        image: book.thumbnail,\n        link: book.link\n    };  \n    API.saveBook(bookDetails)\n      .then(alert('The book has been added to your saved list.'))\n      .catch(err => console.log(err));\n  }\n  \n  return (\n    <div className=\"card\">\n      {/* <ViewBtn onClick={() => viewBook(props.link)} />\n      <SaveBtn onClick={() => props.saveBook} /> */}\n      <div>\n        <h4>{props.title}</h4> \n        <Button variant=\"outline-primary\" className=\"float-right\" onClick={() => viewBook(props.link)}>View</Button>\n        <Button variant=\"primary\" className=\"float-right\" onClick={() => saveBook(props)}>Save</Button>\n      </div>\n      <p>Written by: {props.authors}</p>\n      <div className=\"img-container\">\n        <img alt={props.title} src={props.thumbnail}></img>\n        <p>{props.description}</p>\n      </div>\n      <div className=\"content\">\n      </div>\n    </div>\n  );\n}\n\nexport default SearchedBookCard;\n","import React from \"react\";\n\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input(props) {\n  return (\n    <div className=\"form-group\">\n      <input className=\"form-control\" {...props} />\n    </div>\n  );\n}\n\nexport function TextArea(props) {\n  return (\n    <div className=\"form-group\">\n      <textarea className=\"form-control\" rows=\"20\" {...props} />\n    </div>\n  );\n}\n\nexport function FormBtn(props) {\n  return (\n    <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\n      {props.children}\n    </button>\n  );\n}\n","import React, { useState } from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport SearchedBookCard from \"../components/SearchedBookCard\"\r\nimport API from \"../utils/API\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List, ListItem } from \"../components/List\";\r\nimport { Input, FormBtn } from \"../components/Form\";\r\n\r\nfunction Search() {\r\n  // Setting our component's initial state\r\n  const [books, setBooks] = useState([])\r\n  const [formObject, setFormObject] = useState({})\r\n  console.log(books);\r\n\r\n  // Handles updating component state when the user types into the input field\r\n  function handleInputChange(event) {\r\n    const { name, value } = event.target;\r\n    setFormObject({...formObject, [name]: value})\r\n  };\r\n\r\n  function displayResults(returnedBooks) {\r\n    setBooks(returnedBooks);\r\n  }\r\n\r\n  // When the form is submitted, use the API.searchBooks method to call the google books api.\r\n  // Then load the returned list\r\n  function handleFormSubmit(event) {\r\n    event.preventDefault();\r\n    if (formObject.title) {\r\n      API.searchBooks(formObject.title)\r\n        .then(res => displayResults(res.data.items))\r\n        .catch(err => console.log(err));\r\n    }\r\n  };\r\n\r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n          <Col size=\"md-10 sm-12\">\r\n            <Jumbotron>\r\n              <h1>(React) Google Book Search</h1>\r\n              <h3>Search for and save books of Interest</h3>\r\n            </Jumbotron>\r\n            <form>\r\n              <Input\r\n                onChange={handleInputChange}\r\n                name=\"title\"\r\n                placeholder=\"Title (required)\"\r\n              />\r\n              <FormBtn\r\n                disabled={!(formObject.title)}\r\n                onClick={handleFormSubmit}\r\n              >\r\n                Search\r\n              </FormBtn>\r\n            </form>\r\n          </Col>\r\n\r\n        </Row>\r\n        <Row>\r\n          <Col size=\"md-12 sm-12\">\r\n            <h2>Results</h2>\r\n            {books.length ? (\r\n              <List>\r\n                {books.map(book => (                  \r\n                  <ListItem key={book.id}>\r\n                    {/* <SaveBtn onClick={() => saveBook(book)} /> */}\r\n                    <SearchedBookCard\r\n                      title={book.volumeInfo.title}\r\n                      authors={(typeof book.volumeInfo.authors === \"undefined\") ? '' : book.volumeInfo.authors.join(', ')}\r\n                      thumbnail={(typeof book.volumeInfo.imageLinks === \"undefined\") ? '' : book.volumeInfo.imageLinks.smallThumbnail}\r\n                      description={book.volumeInfo.description}\r\n                      link={book.volumeInfo.previewLink}\r\n                      // saveBook={saveBook(book)}\r\n                      />\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            ) : (\r\n              <h3>No Results to Display</h3>\r\n              )}\r\n          </Col> \r\n        </Row>      \r\n    </Container>\r\n    );\r\n  }\r\n  \r\n  \r\n  export default Search;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <a className=\"navbar-brand\" href=\"/\">\n        Google Books\n      </a>\n      <Link\n        to=\"/\"\n        className={\n          window.location.pathname === \"/\" || window.location.pathname === \"/search\" ? \"nav-link active\" : \"nav-link\"\n        }\n      >\n        Search\n      </Link>\n      <Link\n        to=\"/saved\"\n        className={window.location.pathname === \"/saved\" ? \"nav-link active\" : \"nav-link\"}\n      >\n        Saved\n      </Link>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Saved from \"./pages/Saved\";\nimport Search from \"./pages/Search\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Nav />\n        <Switch>\n          <Route exact path={[\"/\", \"/search\"]}>\n            <Search />\n          </Route>\n          <Route exact path=\"/saved\">\n            <Saved />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}